/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ring")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("set")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("setout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pill_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pill_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pill_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pill_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pill_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pill_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pill_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pill_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("inc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("choose")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("choose[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "choose";
}

SIGNAL("choose[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "choose";
}

SIGNAL("en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("green_light")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("red_light")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk_1000")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DISPLAY_OUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DISPLAY_OUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DISPLAY_OUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DISPLAY_OUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DISPLAY_OUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DISPLAY_OUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DISPLAY_OUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("switch")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

GROUP("pill_out1")
{
	MEMBERS = "pill_out[7]", "pill_out[6]", "pill_out[5]", "pill_out[4]";
}

GROUP("pill_out0")
{
	MEMBERS = "pill_out[3]", "pill_out[2]", "pill_out[1]", "pill_out[0]";
}

GROUP("total_out2")
{
	MEMBERS = "total_out[11]", "total_out[10]", "total_out[9]", "total_out[8]";
}

GROUP("total_out1")
{
	MEMBERS = "total_out[7]", "total_out[6]", "total_out[5]", "total_out[4]";
}

GROUP("total_out0")
{
	MEMBERS = "total_out[3]", "total_out[2]", "total_out[1]", "total_out[0]";
}

GROUP("DISPLAY_OUT")
{
	MEMBERS = "DISPLAY_OUT[6]", "DISPLAY_OUT[5]", "DISPLAY_OUT[4]", "DISPLAY_OUT[3]", "DISPLAY_OUT[2]", "DISPLAY_OUT[1]", "DISPLAY_OUT[0]";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("clr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 290.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 230.0;
	}
}

TRANSITION_LIST("ring")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 329.005;
		NODE
		{
			REPEAT = 11099;
			LEVEL 1 FOR 0.005;
			LEVEL 0 FOR 0.005;
		}
		LEVEL 1 FOR 0.005;
		LEVEL 0 FOR 249.005;
		NODE
		{
			REPEAT = 6099;
			LEVEL 1 FOR 0.005;
			LEVEL 0 FOR 0.005;
		}
		LEVEL 1 FOR 0.005;
		LEVEL 0 FOR 249.005;
		NODE
		{
			REPEAT = 99;
			LEVEL 1 FOR 0.005;
			LEVEL 0 FOR 0.005;
		}
		LEVEL 1 FOR 0.005;
	}
}

TRANSITION_LIST("set")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 910.0;
	}
}

TRANSITION_LIST("setout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 910.0;
	}
}

TRANSITION_LIST("pill_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 910.0;
	}
}

TRANSITION_LIST("pill_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 910.0;
	}
}

TRANSITION_LIST("pill_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 49.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 38.0;
			LEVEL 0 FOR 38.0;
		}
		LEVEL 1 FOR 38.0;
		LEVEL 0 FOR 170.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 38.0;
			LEVEL 0 FOR 38.0;
		}
		LEVEL 1 FOR 38.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 38.0;
			LEVEL 0 FOR 38.0;
		}
		LEVEL 1 FOR 38.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("pill_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 18.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 150.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 18.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 18.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("pill_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 16.0;
			}
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 14.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 146.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 16.0;
			}
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 14.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 96.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 16.0;
			}
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 14.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("pill_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 17.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 8.0;
				LEVEL 0 FOR 12.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 8.0;
				LEVEL 0 FOR 12.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 8.0;
				LEVEL 0 FOR 12.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 3.0;
	}
}

TRANSITION_LIST("pill_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 9.0;
		LEVEL 0 FOR 13.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 111.0;
		LEVEL 0 FOR 23.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 61.0;
		LEVEL 0 FOR 23.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("pill_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 83.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 11.0;
		NODE
		{
			REPEAT = 57;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 111.0;
		LEVEL 0 FOR 21.0;
		NODE
		{
			REPEAT = 57;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 61.0;
		LEVEL 0 FOR 21.0;
		NODE
		{
			REPEAT = 57;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("total_out[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 229.0;
		LEVEL 1 FOR 111.0;
		LEVEL 0 FOR 249.0;
		LEVEL 1 FOR 61.0;
		LEVEL 0 FOR 249.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("total_out[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 229.0;
		LEVEL 1 FOR 111.0;
		LEVEL 0 FOR 249.0;
		LEVEL 1 FOR 61.0;
		LEVEL 0 FOR 249.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("total_out[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 229.0;
		LEVEL 1 FOR 111.0;
		LEVEL 0 FOR 249.0;
		LEVEL 1 FOR 61.0;
		LEVEL 0 FOR 249.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("total_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 199.0;
		LEVEL 1 FOR 141.0;
		LEVEL 0 FOR 219.0;
		LEVEL 1 FOR 91.0;
		LEVEL 0 FOR 219.0;
		LEVEL 1 FOR 31.0;
	}
}

TRANSITION_LIST("total_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 169.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 31.0;
	}
}

TRANSITION_LIST("total_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 89.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 71.0;
	}
}

TRANSITION_LIST("total_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 17.0;
		LEVEL 0 FOR 49.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 71.0;
	}
}

TRANSITION_LIST("total_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 13.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 150.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("total_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 65.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 156.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 106.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 11.0;
	}
}

TRANSITION_LIST("total_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 18.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 17.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 138.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 88.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("total_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 13.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 136.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 86.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 3.0;
	}
}

TRANSITION_LIST("total_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 11.0;
		NODE
		{
			REPEAT = 56;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 134.0;
		NODE
		{
			REPEAT = 56;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 84.0;
		NODE
		{
			REPEAT = 56;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
	}
}

TRANSITION_LIST("inc")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 250;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
	}
}

TRANSITION_LIST("choose[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 900.0;
	}
}

TRANSITION_LIST("choose[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 920.0;
	}
}

TRANSITION_LIST("en")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
	}
}

TRANSITION_LIST("green_light")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 229.0;
		LEVEL 0 FOR 111.0;
		LEVEL 1 FOR 249.0;
		LEVEL 0 FOR 61.0;
		LEVEL 1 FOR 249.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("red_light")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 229.0;
		LEVEL 1 FOR 111.0;
		LEVEL 0 FOR 249.0;
		LEVEL 1 FOR 61.0;
		LEVEL 0 FOR 249.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("clk_1000")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100000;
			LEVEL 0 FOR 0.005;
			LEVEL 1 FOR 0.005;
		}
	}
}

TRANSITION_LIST("DISPLAY_OUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 18;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 11.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 132.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 82.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("DISPLAY_OUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 19.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 156.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 106.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 17.0;
	}
}

TRANSITION_LIST("DISPLAY_OUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 13.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 18.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 138.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 18.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 88.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 18.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("DISPLAY_OUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
		}
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 11.0;
		NODE
		{
			REPEAT = 10;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 132.0;
		NODE
		{
			REPEAT = 10;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 82.0;
		NODE
		{
			REPEAT = 10;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("DISPLAY_OUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 11.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 82.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("DISPLAY_OUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 11.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 134.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 84.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
	}
}

TRANSITION_LIST("DISPLAY_OUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 14.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 134.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 84.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("switch")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_1000";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "set";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "switch";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "choose";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "choose[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "choose[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "green_light";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "red_light";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ring";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "setout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pill_out1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "pill_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "pill_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "pill_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "pill_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "pill_out0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "pill_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "pill_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "pill_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "pill_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "total_out2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "total_out1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "total_out0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
	CHILDREN = 35, 36, 37, 38;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "total_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "DISPLAY_OUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
	CHILDREN = 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "DISPLAY_OUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "DISPLAY_OUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "DISPLAY_OUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "DISPLAY_OUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "DISPLAY_OUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "DISPLAY_OUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "DISPLAY_OUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 39;
}

TIME_BAR
{
	TIME = 100000;
	MASTER = TRUE;
}
;
